# ðŸ“˜ Tugas 1 Pemrograman Berorientasi Object
### Meliputi materi :
1. **Class dan Object (Pertemuan 2)**
2. **Encapsulation (Pertemuan 3)**
3. **Constructor (Pertemuan 4)**

```
Nama: Ahmad Ridwan Khoironi
Nim: 32602400004
```


---

## ðŸ’» Analisa Kode Berikut

### Kode `MakhlukHidup.java` dan `TestAccess.java` versi `ERROR`
><div style="color: blue">
><strong>Tugas:<br/>
>1. Temukan, jelaskan, dan perbaiki setiap error berkaitan dengan materi pada MakhlukHidup.java dan TestAccess.java. Ada 10+ kesalahan. Setiap kesalahan memiliki skor (lihat pada tabel skor). Skor minimal LULUS = 60.
><br/>
>2. Tuliskan output dari TestAccess jika kode sudah diperbaiki
></strong>
</div>

```java

public class MakhlukHidup {

    private string nama;       
    private String jenis;
    public double berat = -1.0;  
    private int umur;


    public MakhlukHidup() {
        this.nama = "Unknown";
        this.jenis = "Unknown";
        this.umur = 15;
        this.berat = 10.0;
    }

    public void MakhlukHidup(String nama) { 
        this.nama = nama;
        this.jenis = "Salah";
        this.umur = 12;
        this.berat = 170.0;
    }

    public makhlukHidup(String nama, String jenis, int umur, double berat) { 
        this.nama = jenis;  
        this.jenis = nama; 
        this.umur = umur;
        this.berat = berat;
    }

    public MakhlukHidup(MakhlukHidup other) {
        this.nama = nama; 
        this.jenis = other.jenis; 
        this.umur = this.umur; 
        this.berat = other.berat;
    }


    public void setUmur(String umur) { 
        this.umur = umur;
    }

    public void setNama(String nama) {
        nama = this.nama; 
    }

    public int getInfo() { 
        return "Nama=" + nama + ", Jenis=" + jenis 
        + ", Umur=" + umur + ", Berat=" + berat;
    }
}

```

```java
class TestAccess {
    public static void main(String[] args) {
        MakhlukHidup m = new MakhlukHidup();
        
        m.nama = "Kucing";  
        
        MakhlukHidup m2 = new MakhlukHidup("Harimau", "Hewan", 3, 120.0);
        
        MakhlukHidup m3 = new MakhlukHidup(m2);
 
        System.out.println(m.getInfo());
        
        System.out.println(m2.getInfo());
        
        m2.MakhlukHidup("Kuda"); 
                
        System.out.println(m2.getInfo());
        
        m3.setUmur(-10); 
        
        System.out.println(m3.getInfo());

        
    }
}
```


## Table Score
| No | Error | Materi terkait            | Skor |
|----|-------|---------------------------|------|
| 1  | ERR1  | Class & Object (syntax)   | 10   |
| 2  | ERR2  | Class & Object (type)     | 10   |
| 3  | ERR3  | Constructor/init          | 10   |
| 4  | ERR4  | Encapsulation / Setter    | 10   |
| 5  | ERR5  | Constructor (copy)        | 10   |
| 6  | ERR6  | Constructor (copy)        | 10   |
| 7  | ERR7  | Encapsulation / Setter    | 10   |
| 8  | ERR8  | Class & Object (type)     | 10   |
| 9  | ERR9  | Class & Object (type)     | 10   |
| 10 | ERR10 | Encapsulation / Validation| 10   |
**Total skor : 100**

## Petunjuk Pengerjaan

Temukan semua ERR#, jelaskan kenapa salah dalam bentuk table dengan kolom berikut, selanjutnya tulis kode perbaikannya.

| No | Class        | Kesalahan | Perbaikan |
|----|--------------|-----------|-----------|
| 1 | MakhlukHidup | [contoh] variable `jumlah` salah penulisan akses `publik` | seharusnya `public jumlah = 10`|

2. Kompilasi dan jalankan setelah diperbaiki.
3. Upload kode pada **Github** repository anda dan **upload link nya ke dalam sinau** di topik **Tugas 1 PBO** disertai **file penjelasannya** dalam format word atau markdown

> Peringatan : Penggunaan AI tidak menjamin jawaban anda semuanya benar

---

CODE PERBAIKAN

```java

public class MakhlukHidup {

    private String nama;       // error syntax, string S nya besar
    private String jenis;
    private double berat; //=1.0 (sudah dihapus)  // mengubah -1.0 menjadi 1.0, atribut berat seharusnya private dan tidak boleh minus. dihapus saja, sudah diinisialisasi di constructor (tindakan sia sia)
    private int umur;


    public MakhlukHidup() {
        this.nama = "Unknown";
        this.jenis = "Unknown";
        this.umur = 15;
        this.berat = 10.0;
    }

    public void Makhluk(String nama) { // bukan constructor, sebaiknya nama yang sama dengan class dihindari (dari MakhlukHidup -> Makhluk)
        this.nama = nama;
        this.jenis = "Salah";
        this.umur = 12;
        this.berat = 170.0;
    }

    public MakhlukHidup(String nama, String jenis, int umur, double berat) { // penulisan makhlukHidup, seharusnya MakhlukHidup
        this.nama = nama;  // letak nama dan jenis terbalik. jenis -> nama
        this.jenis = jenis; // letak nama dan jenis terbalik. nama -> jenis
        this.umur = umur;
        this.berat = berat;
    }

    public MakhlukHidup(MakhlukHidup other) {
        this.nama = other.nama; // nama diubah menjadi other.nama, mengikuti yang ada di parameter 
        this.jenis = other.jenis; 
        this.umur = other.umur; // this.umur diubah menjadi other.umur, mengikuti yang ada di parameter
        this.berat = other.berat;
    }


    public void setUmur(int umur) { // salah type data, seharusnya int untuk umur bukan String
        this.umur = umur;
    }

    public void setNama(String nama) { 
        this.nama = nama; // terbalik, awalnya nama=this.nama menjadi this.nama=nama. tidak error, hanya kesalahan logika
    }

    public String getInfo() { // salah type data, harusnya pakai String bukan int
        return "Nama=" + nama + ", Jenis=" + jenis 
        + ", Umur=" + umur + ", Berat=" + berat;
    }
}

class TestAccess {
    public static void main(String[] args) {
        MakhlukHidup m = new MakhlukHidup();
        
        m.setNama("Kucing"); // nama bersifat private, tidak bisa diakses langsung jadi harus lewat method setter
        
        MakhlukHidup m2 = new MakhlukHidup("Harimau", "Hewan", 3, 120.0);
        
        MakhlukHidup m3 = new MakhlukHidup(m2);
 
        System.out.println(m.getInfo());
        
        System.out.println(m2.getInfo());
        
        m2.Makhluk("Kuda"); // mengikuti perubahan di line 16, MakhlukHidup -> Makhluk
                
        System.out.println(m2.getInfo());
        
        m3.setUmur(10); // mengubah -10 menjadi 10, umur tidak boleh negatif
        
        System.out.println(m3.getInfo());

        
    }
}
```

Tabel Perbaikan

| No |    Class   |Kesalahan|Perbaikan|
|----|------------|---------|---------|
| 1  |MakhlukHidup|error syntax, string S nya besar     |   private String nama;        |
| 2  |MakhlukHidup|// dihapus saja, sudah diinisialisasi di constructor (tindakan sia sia)         |  private double berat;        |
| 3  |MakhlukHidup|   bukan constructor, sebaiknya nama yang sama dengan class dihindari (dari MakhlukHidup -> Makhluk)       |   public void Makhluk(String nama)      |
| 4  |MakhlukHidup|penulisan makhlukHidup, seharusnya MakhlukHidup         |     public MakhlukHidup(String nama, String jenis, int umur, double berat)    |
| 5  |MakhlukHidup|    letak nama dan jenis terbalik. jenis -> nama     |   this.nama = nama;       |
| 6  |MakhlukHidup|     letak nama dan jenis terbalik. nama -> jenis    |   this.jenis = jenis;      |
| 7  |MakhlukHidup|      nama diubah menjadi other.nama, mengikuti yang ada di parameter      |    this.nama = other.nama;     |
| 8  |MakhlukHidup|  this.umur diubah menjadi other.umur, mengikuti yang ada di parameter      |     this.umur = other.umur;     |
| 9  |MakhlukHidup|    salah type data, seharusnya int untuk umur bukan String     |    public void setUmur(int umur)   |
| 10 |MakhlukHidup|       terbalik, awalnya nama=this.nama menjadi this.nama=nama. tidak error, hanya kesalahan logika |  this.nama = nama;       |
| 11 |MakhlukHidup|  salah type data, harusnya pakai String bukan int      |    public String getInfo()     |
| 12 |TestAccess |nama bersifat private, tidak bisa diakses langsung jadi harus lewat method setter         |  m.setNama("Kucing");        |
| 13 | TestAccess|mengikuti perubahan di line 16, MakhlukHidup -> Makhluk         |  m2.Makhluk("Kuda");       |
| 14 |TestAccess|mengubah -10 menjadi 10, umur tidak boleh negatif         |   m3.setUmur(10);      |
